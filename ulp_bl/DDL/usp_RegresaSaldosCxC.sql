create procedure usp_RegresaSaldosCxC (
	@monto_diferencia as numeric(18,2)
)
as

begin

/*
	
	Regresa los clientes que tengan facturas con diferencias según el valor que se pase al parámetro
*/

set nocount on
SELECT CVE_CLIE,SUM(IMPORTE * SIGNO) AS CARGOS INTO #CARGOS_TOTALIZADOS FROM aspel_sae50..CUEN_M01 GROUP BY CVE_CLIE
SELECT CVE_CLIE,SUM(IMPORTE * SIGNO) AS ABONOS INTO #ABONOS_TOTALIZADOS FROM aspel_sae50..CUEN_DET01 GROUP BY CVE_CLIE

SELECT
	CT.CVE_CLIE,
	CT.CARGOS,
	AT.ABONOS,
	CAST(CT.CARGOS + AT.ABONOS AS NUMERIC(18,2)) AS SALDO_TOTALIZADO
	INTO
	#SALDOS_TOTALIZADOS
FROM
	#CARGOS_TOTALIZADOS CT
INNER JOIN
	#ABONOS_TOTALIZADOS AT
	ON
	CT.CVE_CLIE = AT.CVE_CLIE
--------
SELECT
	RTRIM(LTRIM(CARGOS.CVE_CLIE)) AS CVE_CLIE,
	RTRIM(LTRIM(CARGOS.NO_FACTURA)) AS NO_FACTURA,
	RTRIM(LTRIM(CARGOS.REFER)) AS REFER,
	CARGOS.NUM_CPTO,
	CONC.DESCR,
	CARGOS.IMPORTE * CARGOS.SIGNO AS CARGOS
	INTO #CARGOS
FROM	
	aspel_sae50..CUEN_M01 CARGOS	
inner JOIN
	aspel_sae50..CONC01 CONC	
	ON
	CARGOS.NUM_CPTO = CONC.NUM_CPTO
where	
	RTRIM(LTRIM(CARGOS.CVE_CLIE)) IN (
									SELECT LTRIM(RTRIM(CVE_CLIE)) FROM #SALDOS_TOTALIZADOS WHERE SALDO_TOTALIZADO <> 0
									 )
	AND
	(CONC.NUM_CPTO IN (1) OR CONC.TIPO ='A')

SELECT
				RTRIM(LTRIM(A.CVE_CLIE)) AS CVE_CLIE,
				RTRIM(LTRIM(A.REFER)) AS REFER,
				A.ID_MOV,
				SUM(A.IMPORTE * A.SIGNO) AS ABONOS
				INTO #ABONOS
			FROM 
				aspel_sae50..CUEN_DET01 A
				INNER JOIN
				aspel_sae50..CONC01 CONC
				ON
				A.NUM_CPTO = CONC.NUM_CPTO
			WHERE
				--CONC.TIPO NOT IN ('C')	
				--AND
				CONC.NUM_CPTO IN (12,16,17,25,26,27,37,38,45,46)				
			GROUP BY	
				A.CVE_CLIE,	
				A.REFER,
				A.ID_MOV



SELECT
	C.CVE_CLIE,
	C.NO_FACTURA,
	C.REFER,
	C.NUM_CPTO,
	A.ID_MOV,
	C.DESCR,
	ABS(C.CARGOS) AS CARGOS,
	CASE WHEN A.ABONOS IS NULL THEN 'Sin mov. de abono' else 'Con mov. de abono' end as TIPO_MOVIMIENTOS,
	CASE WHEN A.ABONOS IS NULL THEN 0 else 1 end as TIPO_MOVIMIENTO_ID,
	CASE WHEN A.ABONOS IS NULL THEN 0 ELSE A.ABONOS END AS ABONOS,
	CASE WHEN A.ABONOS IS NULL THEN C.CARGOS ELSE CAST(C.CARGOS + A.ABONOS AS NUMERIC(18,2)) END AS SALDO
	INTO #CONSOLIDADO	
FROM
	#CARGOS C LEFT JOIN #ABONOS A ON A.CVE_CLIE = C.CVE_CLIE AND C.REFER = A.REFER AND C.NUM_CPTO = A.ID_MOV

SELECT
	0 AS ID,
	0 as SEL,
	CVE_CLIE,
	NO_FACTURA,
	REFER,
	ID_MOV,
	SUM(SALDO) AS SALDO,
	'' AS [STATUS]
INTO
	#CONSOLIDADO_FINAL
FROM
	#CONSOLIDADO
GROUP BY
	CVE_CLIE,
	NO_FACTURA,
	REFER,
	ID_MOV
HAVING
	(SUM(SALDO) BETWEEN -@monto_diferencia AND -.01)
	OR
	(SUM(SALDO) BETWEEN .01 AND @monto_diferencia)
ORDER BY CVE_CLIE




SELECT 
	CF.*,
	SUM(CT.CARGOS) AS CARGOS
FROM
	#CONSOLIDADO_FINAL CF
INNER JOIN
	#CONSOLIDADO CT
	ON
	CF.CVE_CLIE = CT.CVE_CLIE
	AND
	CF.NO_FACTURA = CT.NO_FACTURA
	AND
	CF.REFER = CT.REFER
WHERE
	CT.TIPO_MOVIMIENTO_ID = 1
GROUP BY
	CF.ID,
	CF.SEL,
	CF.CVE_CLIE,
	CF.NO_FACTURA,
	CF.REFER,	
	CF.ID_MOV,
	CF.[STATUS],
	CF.SALDO
ORDER BY CF.CVE_CLIE

DROP TABLE #ABONOS
DROP TABLE #CARGOS
DROP TABLE #CONSOLIDADO
DROP TABLE #CONSOLIDADO_FINAL
DROP TABLE #CARGOS_TOTALIZADOS
DROP TABLE #ABONOS_TOTALIZADOS
DROP TABLE #SALDOS_TOTALIZADOS

end